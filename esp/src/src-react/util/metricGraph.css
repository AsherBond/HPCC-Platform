.eclwatch_MetricGraphWidget {
    /* fill: var(--colorNeutralBackground1); */
    background-color: red;
    stroke: var(--colorNeutralForeground1);
}

.eclwatch_MetricGraphWidget rect.zoomBackground {
    fill: var(--colorNeutralBackground1);
    stroke: none;
}

.eclwatch_MetricGraphWidget text {
    fill: var(--colorNeutralForeground1);
    stroke: none;
}

.eclwatch_MetricGraphWidget .cluster>polygon {
    stroke: var(--colorPalettePlatinumForeground2);
}

.eclwatch_MetricGraphWidget .cluster.started>polygon {
    stroke: var(--colorStatusWarningForeground1);
}

.eclwatch_MetricGraphWidget .cluster.completed>polygon {
    stroke: var(--colorStatusSuccessForeground1);
}

.eclwatch_MetricGraphWidget .node>path {
    stroke: var(--colorPalettePlatinumForeground2);
}

.eclwatch_MetricGraphWidget .node>polygon {
    stroke: var(--colorPalettePlatinumForeground2);
}

.eclwatch_MetricGraphWidget .node.started>path {
    stroke: var(--colorStatusWarningForeground1);
}

.eclwatch_MetricGraphWidget .node.started>polygon {
    stroke: var(--colorStatusWarningForeground1);
}

.eclwatch_MetricGraphWidget .node.completed>path {
    stroke: var(--colorStatusSuccessForeground1);
}

.eclwatch_MetricGraphWidget .node.completed>polygon {
    stroke: var(--colorStatusSuccessForeground1);
}

.eclwatch_MetricGraphWidget .node.warning>text.warning {
    font-size: 32px;
    fill: var(--colorStatusWarningForeground1);
    stroke-width: 0px;
}

.eclwatch_MetricGraphWidget .edge>path {
    stroke: var(--colorPalettePlatinumForeground2);
}

.eclwatch_MetricGraphWidget .edge>polygon {
    stroke: var(--colorPalettePlatinumForeground2);
}

.eclwatch_MetricGraphWidget .edge.started>path {
    stroke: var(--colorStatusWarningForeground1);
}

.eclwatch_MetricGraphWidget .edge.started>polygon {
    stroke: var(--colorStatusWarningForeground1);
}

.eclwatch_MetricGraphWidget .edge.completed>path {
    stroke: var(--colorStatusSuccessForeground1);
}

.eclwatch_MetricGraphWidget .edge.completed>polygon {
    stroke: var(--colorStatusSuccessForeground1);
}